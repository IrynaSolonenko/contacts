{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/React.Hillel/contacts/src/components/ContactsBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useReducer } from 'react';\nimport MyHeader from \"./MyHeader\";\nimport ContactsList from \"./ContactsList\";\nimport MyPopUp from \"./UI/MyPopUp/MyPopUp\";\nimport SearchBar from \"./UI/SearchBar/SearchBar\";\nimport reducer from \"./reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ContactsBook = () => {\n  _s();\n\n  // const [contacts, setContacts] = useState([\n  // \t{\n  // \t\tid: 1,\n  // \t\tname: 'Lidia',\n  // \t\tsurname: 'Nikitina',\n  // \t\tphone: '+38 (123) 123 45 67'\n  // \t},\n  // \t{\n  // \t\tid: 2,\n  // \t\tname: 'Alice',\n  // \t\tsurname: 'Kluni',\n  // \t\tphone: '+38 (163) 123 45 67'\n  // \t},\n  // \t{\n  // \t\tid: 3,\n  // \t\tname: 'Carol',\n  // \t\tsurname: 'Semko',\n  // \t\tphone: '+38 (123) 163 45 67'\n  // \t},\n  // \t{\n  // \t\tid: 4,\n  // \t\tname: 'Olga',\n  // \t\tsurname: 'Baritska',\n  // \t\tphone: '+38 (123) 123 46 67'\n  // \t},\n  // \t{\n  // \t\tid: 5,\n  // \t\tname: 'Olga',\n  // \t\tsurname: 'Marirchko',\n  // \t\tphone: '+38 (123) 123 45 66'\n  // \t},\n  // \t{\n  // \t\tid: 6,\n  // \t\tname: 'Svetlana',\n  // \t\tsurname: 'Prihodko',\n  // \t\tphone: '+38 (323) 323 45 67'\n  // \t},\n  // \t{\n  // \t\tid: 7,\n  // \t\tname: 'Alex',\n  // \t\tsurname: 'Manson',\n  // \t\tphone: '+38 (123) 123 43 67'\n  // \t}\n  // ])\n  const [currentContactId, setCurrentContactId] = useState(null);\n  const [filterContacts, setFilterContacts] = useState('');\n  const [state, dispatch] = useReducer(reducer, contactList);\n\n  const onContactDelete = contact => {\n    setContacts(contacts.filter(current => current.id !== contact));\n  };\n\n  const filterHandler = useMemo(() => {\n    return state.contacts.filter(contact => contact.name.toLowerCase().includes(filterContacts.toLowerCase()) || contact.surname.toLowerCase().includes(filterContacts.toLowerCase()) || contact.phone.toLowerCase().includes(filterContacts.toLowerCase()));\n  }, [contacts, filterContacts]);\n  const currentContactHandler = useMemo(() => {\n    return filterHandler.find(contact => contact.id === currentContactId);\n  }, [currentContactId, filterHandler]);\n\n  const closePopUp = () => {\n    setCurrentContactId(null);\n  };\n\n  const saveNewChange = saveChangeHandler => {\n    const newContacts = contacts.slice();\n    const prevIndex = newContacts.findIndex(currentId => currentId.id === saveChangeHandler.id);\n    newContacts.splice(prevIndex, 1, saveChangeHandler);\n    setContacts(newContacts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'container',\n    children: [/*#__PURE__*/_jsxDEV(MyHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: e => setFilterContacts(e.target.value),\n      value: filterContacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ContactsList, {\n      contacts: filterHandler,\n      onContactDelete: onContactDelete,\n      buttonChange: setCurrentContactId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this), typeof currentContactId === 'number' ? /*#__PURE__*/_jsxDEV(MyPopUp, {\n      currentContactHandler: currentContactHandler,\n      closePopUp: closePopUp,\n      saveNewChange: saveNewChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ContactsBook, \"WG6bZZxbTGhZfanOzgyGSYSLCDU=\");\n\n_c = ContactsBook;\nexport default ContactsBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsBook\");","map":{"version":3,"names":["React","useState","useMemo","useReducer","MyHeader","ContactsList","MyPopUp","SearchBar","reducer","ContactsBook","currentContactId","setCurrentContactId","filterContacts","setFilterContacts","state","dispatch","contactList","onContactDelete","contact","setContacts","contacts","filter","current","id","filterHandler","name","toLowerCase","includes","surname","phone","currentContactHandler","find","closePopUp","saveNewChange","saveChangeHandler","newContacts","slice","prevIndex","findIndex","currentId","splice","e","target","value"],"sources":["/Users/user/Documents/React.Hillel/contacts/src/components/ContactsBook.js"],"sourcesContent":["import React, {useState, useMemo, useReducer} from 'react'\nimport MyHeader from \"./MyHeader\"\nimport ContactsList from \"./ContactsList\"\nimport MyPopUp from \"./UI/MyPopUp/MyPopUp\"\nimport SearchBar from \"./UI/SearchBar/SearchBar\"\nimport reducer from \"./reducer\";\n\n\nconst ContactsBook = () => {\n\n\t// const [contacts, setContacts] = useState([\n\t// \t{\n\t// \t\tid: 1,\n\t// \t\tname: 'Lidia',\n\t// \t\tsurname: 'Nikitina',\n\t// \t\tphone: '+38 (123) 123 45 67'\n\t// \t},\n\t// \t{\n\t// \t\tid: 2,\n\t// \t\tname: 'Alice',\n\t// \t\tsurname: 'Kluni',\n\t// \t\tphone: '+38 (163) 123 45 67'\n\t// \t},\n\t// \t{\n\t// \t\tid: 3,\n\t// \t\tname: 'Carol',\n\t// \t\tsurname: 'Semko',\n\t// \t\tphone: '+38 (123) 163 45 67'\n\t// \t},\n\t// \t{\n\t// \t\tid: 4,\n\t// \t\tname: 'Olga',\n\t// \t\tsurname: 'Baritska',\n\t// \t\tphone: '+38 (123) 123 46 67'\n\t// \t},\n\t// \t{\n\t// \t\tid: 5,\n\t// \t\tname: 'Olga',\n\t// \t\tsurname: 'Marirchko',\n\t// \t\tphone: '+38 (123) 123 45 66'\n\t// \t},\n\t// \t{\n\t// \t\tid: 6,\n\t// \t\tname: 'Svetlana',\n\t// \t\tsurname: 'Prihodko',\n\t// \t\tphone: '+38 (323) 323 45 67'\n\t// \t},\n\t// \t{\n\t// \t\tid: 7,\n\t// \t\tname: 'Alex',\n\t// \t\tsurname: 'Manson',\n\t// \t\tphone: '+38 (123) 123 43 67'\n\t// \t}\n\t// ])\n\tconst [currentContactId, setCurrentContactId] = useState(null)\n\tconst [filterContacts, setFilterContacts] = useState('')\n\tconst [state, dispatch] = useReducer(reducer, contactList)\n\n\tconst onContactDelete = (contact) => {\n\t\tsetContacts(contacts.filter(current=>current.id !== contact))\n\t}\n\n\tconst filterHandler = useMemo (() =>{\n\treturn state.contacts.filter(contact => contact.name.toLowerCase().includes(filterContacts.toLowerCase())\n\t\t|| contact.surname.toLowerCase().includes(filterContacts.toLowerCase())\n\t\t|| contact.phone.toLowerCase().includes(filterContacts.toLowerCase()))\n\t}, [contacts, filterContacts])\n\n\n\tconst currentContactHandler = useMemo (() => {\n\t\treturn filterHandler.find(contact=>contact.id === currentContactId)\n\t}, [currentContactId, filterHandler])\n\n\n\tconst closePopUp = () => {\n\t\tsetCurrentContactId(null)\n\t}\n\n\tconst saveNewChange = (saveChangeHandler) => {\n\t\tconst newContacts = contacts.slice();\n\t\tconst prevIndex = newContacts.findIndex(currentId=>currentId.id === saveChangeHandler.id)\n\t\tnewContacts.splice(prevIndex, 1, saveChangeHandler)\n\t\tsetContacts(newContacts)\n\t}\n\n\treturn (\n\t\t<div className={'container'}>\n\t\t\t<MyHeader/>\n\t\t\t<SearchBar\n\t\t\t\tonSearch={e=>setFilterContacts(e.target.value)}\n\t\t\t\tvalue={filterContacts}\n\t\t\t/>\n\t\t\t<ContactsList\n\t\t\t\tcontacts={filterHandler}\n\t\t\t\tonContactDelete={onContactDelete}\n\t\t\t\tbuttonChange={setCurrentContactId}\n\t\t\t/>\n\n\t\t\t{\n\t\t\t\t(typeof currentContactId === 'number' )\n\t\t\t\t? <MyPopUp\n\t\t\t\t\t\tcurrentContactHandler={currentContactHandler}\n\t\t\t\t\t\tclosePopUp={closePopUp}\n\t\t\t\t\t\tsaveNewChange={saveNewChange}\n\t\t\t\t\t/>\n\t\t\t\t: <></>\n\t\t\t}\n\n\t\t</div>\n\t)\n}\n\nexport default ContactsBook"],"mappings":"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"},"metadata":{},"sourceType":"module"}