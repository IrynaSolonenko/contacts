{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/React.Hillel/contacts/src/components/UI/MyPopUp/MyPopUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPopUp = _ref => {\n  _s();\n\n  let {\n    currentContactHandler,\n    closePopUp,\n    saveNewChange,\n    visible,\n    setVisible\n  } = _ref;\n  console.log(currentContactHandler);\n  const [name, setName] = useState(currentContactHandler.name);\n  const [surname, setSurName] = useState(currentContactHandler.surname);\n  const [phone, setPhone] = useState(currentContactHandler.phone);\n  const [isSave, setIsSave] = useState(true);\n\n  const onChangeFieldsHandler = (field, value) => {\n    switch (field) {\n      case 'name':\n        {\n          setName(value);\n          break;\n        }\n\n      case 'surname':\n        {\n          setSurName(value);\n          break;\n        }\n\n      case 'phone':\n        {\n          setPhone(value);\n          break;\n        }\n    }\n\n    setIsSave(false);\n  };\n\n  useEffect(() => {\n    setName(currentContactHandler.name);\n    setSurName(currentContactHandler.surname);\n    setPhone(currentContactHandler.phone);\n  }, [currentContactHandler]);\n\n  const saveChangeHandler = () => {\n    if (!isSave) {\n      saveNewChange({\n        id: currentContactHandler.id,\n        name,\n        surname,\n        phone\n      });\n    }\n\n    closePopUp();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: visible ? 'my-dialog my-dialog_visible' : 'my-dialog',\n      onClick: () => setVisible(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dialog_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Edit contact: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [currentContactHandler.name, \" \", currentContactHandler.surname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: closePopUp,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dialog_body\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialog_actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: _ref2 => {\n              let {\n                target\n              } = _ref2;\n              return onChangeFieldsHandler('name', target.value);\n            },\n            value: name,\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"surname\",\n            children: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: _ref3 => {\n              let {\n                target\n              } = _ref3;\n              return onChangeFieldsHandler('surname', target.value);\n            },\n            value: surname,\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: _ref4 => {\n              let {\n                target\n              } = _ref4;\n              return onChangeFieldsHandler('phone', target.value);\n            },\n            value: phone,\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveChangeHandler,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MyPopUp, \"Y+o2FkKkTvrwT4ZEcmXghhrCcs8=\");\n\n_c = MyPopUp;\nexport default MyPopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPopUp\");","map":{"version":3,"names":["React","useState","useEffect","MyPopUp","currentContactHandler","closePopUp","saveNewChange","visible","setVisible","console","log","name","setName","surname","setSurName","phone","setPhone","isSave","setIsSave","onChangeFieldsHandler","field","value","saveChangeHandler","id","target"],"sources":["/Users/user/Documents/React.Hillel/contacts/src/components/UI/MyPopUp/MyPopUp.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\n\nconst MyPopUp = ({currentContactHandler, closePopUp, saveNewChange, visible, setVisible}) => {\n\tconsole.log(currentContactHandler);\n\n\tconst [name, setName] = useState(currentContactHandler.name)\n\tconst [surname, setSurName] = useState(currentContactHandler.surname)\n\tconst [phone, setPhone] = useState(currentContactHandler.phone)\n\tconst [isSave, setIsSave] = useState(true)\n\n\tconst onChangeFieldsHandler = (field,value) => {\n\t\tswitch (field){\n\t\t\tcase'name': {\n\t\t\t\tsetName(value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase'surname': {\n\t\t\t\tsetSurName(value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase'phone': {\n\t\t\t\tsetPhone(value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tsetIsSave(false);\n\t}\n\n\n\tuseEffect(() =>{\n\t\tsetName(currentContactHandler.name);\n\t\tsetSurName(currentContactHandler.surname);\n\t\tsetPhone(currentContactHandler.phone);\n\t}, [currentContactHandler]);\n\n\n\tconst saveChangeHandler = () => {\n\tif (!isSave) {\n\t\tsaveNewChange({\n\t\t\tid: currentContactHandler.id,\n\t\t\tname,\n\t\t\tsurname,\n\t\t\tphone\n\t\t})\n\t}\n\t\tclosePopUp()\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div\n\t\t\t\tclassName={visible ? 'my-dialog my-dialog_visible' : 'my-dialog'}\n\t\t\t\tonClick={() => setVisible(false)}>\n\t\t\t\t<div className=\"dialog_header\">\n\t\t\t\t\t<p>Edit contact: <strong>{currentContactHandler.name} {currentContactHandler.surname}</strong></p>\n\t\t\t\t\t<p\n\t\t\t\t\tonClick={closePopUp}\n\t\t\t\t\t>X</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"dialog_body\">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<div className=\"dialog_actions\">\n\t\t\t\t\t\t<label htmlFor=\"name\">First name</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tonChange={({target})=>onChangeFieldsHandler('name', target.value)}\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor=\"surname\">Last name</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tonChange={({target})=>onChangeFieldsHandler('surname', target.value)}\n\t\t\t\t\t\t\tvalue={surname}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor=\"phone\">Phone number</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tonChange={({target})=>onChangeFieldsHandler('phone', target.value)}\n\n\t\t\t\t\t\t\tvalue={phone}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={saveChangeHandler}\n\t\t\t\t\t\t>Save</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default MyPopUp;"],"mappings":"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"},"metadata":{},"sourceType":"module"}